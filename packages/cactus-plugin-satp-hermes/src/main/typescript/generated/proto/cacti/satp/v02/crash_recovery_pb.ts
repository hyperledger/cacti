// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file cacti/satp/v02/crash_recovery.proto (package cacti.satp.v02.crash, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message cacti.satp.v02.crash.RecoverMessage
 */
export class RecoverMessage extends Message<RecoverMessage> {
  /**
   * @generated from field: string sessionId = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string messageType = 2;
   */
  messageType = "";

  /**
   * @generated from field: string satpPhase = 3;
   */
  satpPhase = "";

  /**
   * @generated from field: int32 sequenceNumber = 4;
   */
  sequenceNumber = 0;

  /**
   * @generated from field: bool isBackup = 5;
   */
  isBackup = false;

  /**
   * @generated from field: string newIdentityPublicKey = 6;
   */
  newIdentityPublicKey = "";

  /**
   * @generated from field: int64 lastEntryTimestamp = 7;
   */
  lastEntryTimestamp = protoInt64.zero;

  /**
   * @generated from field: string senderSignature = 8;
   */
  senderSignature = "";

  constructor(data?: PartialMessage<RecoverMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.RecoverMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messageType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "satpPhase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sequenceNumber", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "isBackup", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "newIdentityPublicKey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "lastEntryTimestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "senderSignature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecoverMessage {
    return new RecoverMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecoverMessage {
    return new RecoverMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecoverMessage {
    return new RecoverMessage().fromJsonString(jsonString, options);
  }

  static equals(a: RecoverMessage | PlainMessage<RecoverMessage> | undefined, b: RecoverMessage | PlainMessage<RecoverMessage> | undefined): boolean {
    return proto3.util.equals(RecoverMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.crash.RecoverUpdateMessage
 */
export class RecoverUpdateMessage extends Message<RecoverUpdateMessage> {
  /**
   * @generated from field: string sessionId = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string messageType = 2;
   */
  messageType = "";

  /**
   * @generated from field: string hashRecoverMessage = 3;
   */
  hashRecoverMessage = "";

  /**
   * @generated from field: repeated cacti.satp.v02.crash.LocalLog recoveredLogs = 4;
   */
  recoveredLogs: LocalLog[] = [];

  /**
   * @generated from field: string senderSignature = 5;
   */
  senderSignature = "";

  constructor(data?: PartialMessage<RecoverUpdateMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.RecoverUpdateMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messageType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hashRecoverMessage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "recoveredLogs", kind: "message", T: LocalLog, repeated: true },
    { no: 5, name: "senderSignature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecoverUpdateMessage {
    return new RecoverUpdateMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecoverUpdateMessage {
    return new RecoverUpdateMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecoverUpdateMessage {
    return new RecoverUpdateMessage().fromJsonString(jsonString, options);
  }

  static equals(a: RecoverUpdateMessage | PlainMessage<RecoverUpdateMessage> | undefined, b: RecoverUpdateMessage | PlainMessage<RecoverUpdateMessage> | undefined): boolean {
    return proto3.util.equals(RecoverUpdateMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.crash.RecoverSuccessMessage
 */
export class RecoverSuccessMessage extends Message<RecoverSuccessMessage> {
  /**
   * @generated from field: string sessionId = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string messageType = 2;
   */
  messageType = "";

  /**
   * @generated from field: string hashRecoverUpdateMessage = 3;
   */
  hashRecoverUpdateMessage = "";

  /**
   * @generated from field: bool success = 4;
   */
  success = false;

  /**
   * @generated from field: repeated string entriesChanged = 5;
   */
  entriesChanged: string[] = [];

  /**
   * @generated from field: string senderSignature = 6;
   */
  senderSignature = "";

  constructor(data?: PartialMessage<RecoverSuccessMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.RecoverSuccessMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messageType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hashRecoverUpdateMessage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "entriesChanged", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "senderSignature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecoverSuccessMessage {
    return new RecoverSuccessMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecoverSuccessMessage {
    return new RecoverSuccessMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecoverSuccessMessage {
    return new RecoverSuccessMessage().fromJsonString(jsonString, options);
  }

  static equals(a: RecoverSuccessMessage | PlainMessage<RecoverSuccessMessage> | undefined, b: RecoverSuccessMessage | PlainMessage<RecoverSuccessMessage> | undefined): boolean {
    return proto3.util.equals(RecoverSuccessMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.crash.RollbackMessage
 */
export class RollbackMessage extends Message<RollbackMessage> {
  /**
   * @generated from field: string sessionId = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string messageType = 2;
   */
  messageType = "";

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: repeated string actionsPerformed = 4;
   */
  actionsPerformed: string[] = [];

  /**
   * @generated from field: repeated string proofs = 5;
   */
  proofs: string[] = [];

  /**
   * @generated from field: string senderSignature = 6;
   */
  senderSignature = "";

  constructor(data?: PartialMessage<RollbackMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.RollbackMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messageType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "actionsPerformed", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "proofs", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "senderSignature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackMessage {
    return new RollbackMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackMessage {
    return new RollbackMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackMessage {
    return new RollbackMessage().fromJsonString(jsonString, options);
  }

  static equals(a: RollbackMessage | PlainMessage<RollbackMessage> | undefined, b: RollbackMessage | PlainMessage<RollbackMessage> | undefined): boolean {
    return proto3.util.equals(RollbackMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.crash.RollbackAckMessage
 */
export class RollbackAckMessage extends Message<RollbackAckMessage> {
  /**
   * @generated from field: string sessionId = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string messageType = 2;
   */
  messageType = "";

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: repeated string actionsPerformed = 4;
   */
  actionsPerformed: string[] = [];

  /**
   * @generated from field: repeated string proofs = 5;
   */
  proofs: string[] = [];

  /**
   * @generated from field: string senderSignature = 6;
   */
  senderSignature = "";

  constructor(data?: PartialMessage<RollbackAckMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.RollbackAckMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messageType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "actionsPerformed", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "proofs", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "senderSignature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackAckMessage {
    return new RollbackAckMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackAckMessage {
    return new RollbackAckMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackAckMessage {
    return new RollbackAckMessage().fromJsonString(jsonString, options);
  }

  static equals(a: RollbackAckMessage | PlainMessage<RollbackAckMessage> | undefined, b: RollbackAckMessage | PlainMessage<RollbackAckMessage> | undefined): boolean {
    return proto3.util.equals(RollbackAckMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.crash.LocalLog
 */
export class LocalLog extends Message<LocalLog> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string sessionId = 2;
   */
  sessionId = "";

  /**
   * @generated from field: string data = 3;
   */
  data = "";

  /**
   * @generated from field: string type = 4;
   */
  type = "";

  /**
   * @generated from field: string operation = 5;
   */
  operation = "";

  /**
   * @generated from field: string timestamp = 6;
   */
  timestamp = "";

  constructor(data?: PartialMessage<LocalLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.LocalLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sessionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "operation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalLog {
    return new LocalLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalLog {
    return new LocalLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalLog {
    return new LocalLog().fromJsonString(jsonString, options);
  }

  static equals(a: LocalLog | PlainMessage<LocalLog> | undefined, b: LocalLog | PlainMessage<LocalLog> | undefined): boolean {
    return proto3.util.equals(LocalLog, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.crash.RollbackLogEntry
 */
export class RollbackLogEntry extends Message<RollbackLogEntry> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string stage = 2;
   */
  stage = "";

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp = "";

  /**
   * action performed during rollback
   *
   * @generated from field: string action = 4;
   */
  action = "";

  /**
   * status of rollback (e.g., SUCCESS, FAILED)
   *
   * @generated from field: string status = 5;
   */
  status = "";

  /**
   * Additional details or metadata about the rollback
   *
   * @generated from field: string details = 6;
   */
  details = "";

  constructor(data?: PartialMessage<RollbackLogEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.crash.RollbackLogEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "details", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackLogEntry {
    return new RollbackLogEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackLogEntry {
    return new RollbackLogEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackLogEntry {
    return new RollbackLogEntry().fromJsonString(jsonString, options);
  }

  static equals(a: RollbackLogEntry | PlainMessage<RollbackLogEntry> | undefined, b: RollbackLogEntry | PlainMessage<RollbackLogEntry> | undefined): boolean {
    return proto3.util.equals(RollbackLogEntry, a, b);
  }
}

